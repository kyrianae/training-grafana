# Ignore fluentd own events

# HTTP input for the liveness and readiness probes
<source>
  @type http
  port 9880
</source>

# Listen HTTP for monitoring
# http://localhost:24220/api/plugins
# http://localhost:24220/api/plugins?type=TYPE
# http://localhost:24220/api/plugins?tag=MYTAG
<source>
  @type monitor_agent
  @id monitor_agent_input
  port 24220
</source>

<source>
  @type prometheus
  bind 0.0.0.0
  port 24231
  metrics_path /metrics
</source>

<source>
  @type prometheus_output_monitor
  interval 10
  <labels>
    hostname ${hostname}
  </labels>
</source>
# Throw the healthcheck to the standard output instead of forwarding it
<match fluentd.healthcheck>
  @type stdout
</match>

# Get the logs from the containers running in the node
<source>
  @type tail
  refresh_interval 1s
  path /var/lib/docker/**/**/*log
  read_from_head true
  pos_file /opt/bitnami/fluentd/logs/buffers/docker.pos
  time_format %Y-%m-%dT%H:%M:%S
  tag docker.*
  format json
</source>

# Send the logs to the standard output
<filter **>
     @type record_transformer
    <record>
     host "#{Socket.gethostname}"
    </record>
</filter>

# <filter docker.var.lib.docker.containers.*.*.log >
#   # type docker_metadata
#   <record>
#      meta_tag "${tag}"
#   </record>
# </filter>

<match>
  @type elasticsearch
  host elasticsearch
  index_name logstash.${tag}.%Y%m%d
  port 9200
  logstash_format true
  # time_key timestamp_ms
  flush_interval 1s
  num_threads 8
</match>

# <match>
#     @type kafka_buffered
#     brokers {{ cluster1 }}:9092,{{ cluster2 }}:9092,{{ cluster3 }}:9092
#     default_topic syslog

#     output_data_type json
#     required_acks 0

#     buffer_type memory
#     buffer_chunk_limit 256m
#     buffer_queue_limit 128
#     flush_interval 1s

#     num_threads 8
#     disable_retry_limit
#     ##retry_limit 17: not used because disable_retry_limit
#     retry_wait 1.0
#     ##max_retry_wait unset
#     #logstash_format true
# </match>

